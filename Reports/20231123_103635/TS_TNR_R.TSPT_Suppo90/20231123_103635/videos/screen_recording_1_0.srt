1
00:00:00,713 --> 00:00:00,962
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:00,979 --> 00:00:03,701
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:03,702 --> 00:00:03,702
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:03,702 --> 00:00:03,702
9. DriverName = ""

5
00:00:03,710 --> 00:00:07,021
13. openBrowser("")

6
00:00:07,023 --> 00:00:07,042
17. driver = getWebDriver()

7
00:00:07,044 --> 00:00:07,067
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:07,071 --> 00:00:07,126
25. out.println(wrappedDriver.getClass())

9
00:00:07,126 --> 00:00:07,129
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:07,129 --> 00:00:07,138
2. DriverName = get("WebUI").get("browserType")

11
00:00:07,138 --> 00:00:07,149
6. println("DriverName :" + DriverName)

12
00:00:07,150 --> 00:00:07,158
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:07,159 --> 00:00:07,942
33. DriverName = DriverName

14
00:00:07,943 --> 00:00:10,956
37. delay(medium_wait)

15
00:00:10,959 --> 00:00:10,961
41. executedBrowser = getExecutedBrowser()

16
00:00:10,961 --> 00:00:10,961
45. if (Profiles == "Usager")

17
00:00:10,961 --> 00:00:10,961
1. switch (DriverName)

18
00:00:10,961 --> 00:00:10,961
4. Navigation à URL  Qualification et Création MDP

19
00:00:10,961 --> 00:00:10,961
10. Navigation à URL Préprode  et Création MDP

20
00:00:10,969 --> 00:00:13,399
1. navigateToUrl(URL_ANEFPreProd)

21
00:00:13,400 --> 00:00:13,431
14. maximizeWindow()

22
00:00:13,431 --> 00:00:13,439
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:13,439 --> 00:00:13,446
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:13,447 --> 00:00:14,053
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:14,054 --> 00:00:14,066
3. waiting for the number of elements in the DOM to stop changing

26
00:00:14,067 --> 00:00:14,069
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:14,070 --> 00:00:14,071
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:14,072 --> 00:00:14,268
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:14,269 --> 00:00:16,557
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:16,559 --> 00:00:18,904
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:18,905 --> 00:00:18,907
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:18,909 --> 00:00:21,938
27. delay(3)

33
00:00:21,940 --> 00:00:26,950
32. delay(5)

34
00:00:26,954 --> 00:00:27,110
38. Vérification de l'étape :

35
00:00:27,112 --> 00:00:27,113
42. break

36
00:00:27,114 --> 00:00:27,117
49. if (Profiles == "Agent")

37
00:00:27,118 --> 00:00:27,121
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:27,123 --> 00:00:28,134
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:28,136 --> 00:00:28,142
5. Call Highlight.on() automatically

40
00:00:28,144 --> 00:00:28,256
9. waitForPageLoad(5)

41
00:00:28,258 --> 00:00:30,867
15. Cliquer sur le lien Se Connecter :

42
00:00:30,868 --> 00:00:30,869
19. if (EnvExec == "URL_ANEFQualif")

43
00:00:30,871 --> 00:00:33,774
25. Première visiteq? Créez votre compte :

44
00:00:33,776 --> 00:00:33,801
29. waitForPageLoad(5)

45
00:00:33,802 --> 00:00:33,804
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

46
00:00:33,805 --> 00:00:38,445
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

47
00:00:38,447 --> 00:00:38,448
45.  Fournir La Date de début de validité :

48
00:00:38,451 --> 00:00:38,464
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

49
00:00:38,465 --> 00:00:38,466
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

50
00:00:38,467 --> 00:00:42,767
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

51
00:00:42,768 --> 00:00:45,296
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

52
00:00:45,298 --> 00:00:49,633
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

53
00:00:49,635 --> 00:00:49,636
71.  Fournir La Date de fin de validité :

54
00:00:49,636 --> 00:00:49,638
75. DateFin = tools.MyStringTools.ParsedDateFin()

55
00:00:49,639 --> 00:00:49,640
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

56
00:00:49,642 --> 00:00:53,984
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

57
00:00:53,986 --> 00:00:56,505
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

58
00:00:56,506 --> 00:01:00,839
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

59
00:01:00,841 --> 00:01:03,044
97. Validation de la page pour la création du compte :

60
00:01:03,045 --> 00:01:03,810
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

61
00:01:03,811 --> 00:01:06,826
5.  Exit Action ou on passe à la création

62
00:01:06,828 --> 00:01:06,829
9. StopTestCase = false

63
00:01:06,830 --> 00:01:13,094
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

64
00:01:13,096 --> 00:01:13,097
17. if (MsgAlertPresent)

65
00:01:13,100 --> 00:01:13,113
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

66
00:01:13,115 --> 00:01:13,145
21. waitForPageLoad(2)

67
00:01:13,147 --> 00:01:13,148
111. Exit TestCase

68
00:01:13,149 --> 00:01:14,037
119. Appel Brique Réutilisable VerificationSiCompteExisteDeja

69
00:01:14,038 --> 00:01:17,053
5.  Exit Action ou on passe à la création

70
00:01:17,055 --> 00:01:17,056
9. StopTestCase = false

71
00:01:17,058 --> 00:01:20,294
13. MsgAlertPresent = verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Verif_PopUpCompteExisteDeja"), 2, OPTIONAL)

72
00:01:20,296 --> 00:01:20,297
17. if (MsgAlertPresent)

73
00:01:20,299 --> 00:01:20,300
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

74
00:01:20,301 --> 00:01:20,324
21. waitForPageLoad(2)

75
00:01:20,326 --> 00:01:20,327
125. Exit TestCase

76
00:01:20,330 --> 00:01:20,332
131.  Création de Email utilisateur

77
00:01:20,335 --> 00:01:22,347
135. delay(2)

