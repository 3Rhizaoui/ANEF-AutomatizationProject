1
00:00:00,001 --> 00:00:00,002
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:00,005 --> 00:00:00,084
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:00,086 --> 00:00:00,086
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,088 --> 00:00:00,088
9. DriverName = ""

5
00:00:00,090 --> 00:00:03,637
13. openBrowser("")

6
00:00:03,639 --> 00:00:03,640
17. driver = getWebDriver()

7
00:00:03,643 --> 00:00:03,643
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:03,646 --> 00:00:03,646
25. out.println(wrappedDriver.getClass())

9
00:00:03,648 --> 00:00:03,649
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:03,651 --> 00:00:03,651
2. DriverName = get("WebUI").get("browserType")

11
00:00:03,653 --> 00:00:03,654
6. println("DriverName :" + DriverName)

12
00:00:03,655 --> 00:00:03,656
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:03,657 --> 00:00:03,658
33. DriverName = DriverName

14
00:00:03,660 --> 00:00:06,673
37. delay(medium_wait)

15
00:00:06,674 --> 00:00:06,674
41. executedBrowser = getExecutedBrowser()

16
00:00:06,676 --> 00:00:06,676
45. if (Profiles == "Usager")

17
00:00:06,677 --> 00:00:06,677
1. switch (DriverName)

18
00:00:06,678 --> 00:00:06,678
4. Navigation à URL  Qualification et Création MDP

19
00:00:06,679 --> 00:00:06,680
10. Navigation à URL Préprode  et Création MDP

20
00:00:06,681 --> 00:00:09,132
1. navigateToUrl(URL_ANEFPreProd)

21
00:00:09,134 --> 00:00:09,149
14. maximizeWindow()

22
00:00:09,151 --> 00:00:09,151
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:09,152 --> 00:00:09,153
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:09,154 --> 00:00:09,237
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:09,238 --> 00:00:09,238
3. waiting for the number of elements in the DOM to stop changing

26
00:00:09,239 --> 00:00:09,242
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:09,244 --> 00:00:09,244
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:09,245 --> 00:00:09,398
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:09,400 --> 00:00:11,662
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:11,664 --> 00:00:14,307
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:14,309 --> 00:00:14,310
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:14,311 --> 00:00:17,318
27. delay(3)

33
00:00:17,320 --> 00:00:22,323
32. delay(5)

34
00:00:22,324 --> 00:00:22,481
38. Vérification de l'étape :

35
00:00:22,482 --> 00:00:22,482
42. break

36
00:00:22,483 --> 00:00:22,484
49. if (Profiles == "Agent")

37
00:00:22,485 --> 00:00:22,486
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:22,486 --> 00:00:22,561
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:22,562 --> 00:00:22,563
5. Call Highlight.on() automatically

40
00:00:22,564 --> 00:00:22,584
9. waitForPageLoad(5)

41
00:00:22,585 --> 00:00:25,576
15. Cliquer sur le lien Se Connecter :

42
00:00:25,578 --> 00:00:25,579
19. if (EnvExec == "URL_ANEFQualif")

43
00:00:25,581 --> 00:00:28,911
25. Première visiteq? Créez votre compte :

44
00:00:28,913 --> 00:00:28,932
29. waitForPageLoad(5)

45
00:00:28,934 --> 00:00:28,934
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

46
00:00:28,936 --> 00:00:33,839
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

47
00:00:33,841 --> 00:00:33,842
45.  Fournir La Date de début de validité :

48
00:00:33,843 --> 00:00:33,844
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

49
00:00:33,845 --> 00:00:33,846
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

50
00:00:33,847 --> 00:00:38,184
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

51
00:00:38,186 --> 00:00:40,726
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

52
00:00:40,727 --> 00:00:45,047
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

53
00:00:45,049 --> 00:00:45,050
71.  Fournir La Date de fin de validité :

54
00:00:45,051 --> 00:00:45,051
75. DateFin = tools.MyStringTools.ParsedDateFin()

55
00:00:45,052 --> 00:00:45,053
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

56
00:00:45,054 --> 00:00:49,368
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

57
00:00:49,370 --> 00:00:51,854
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

58
00:00:51,855 --> 00:00:56,154
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

59
00:00:56,155 --> 00:00:58,363
97. Validation de la page pour la création du compte :

60
00:00:58,364 --> 00:00:58,442
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

61
00:00:58,444 --> 00:01:01,457
5.  Exit Action ou on passe à la création

62
00:01:01,461 --> 00:01:01,461
9. StopTestCase = false

63
00:01:01,462 --> 00:01:07,767
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

64
00:01:07,769 --> 00:01:07,769
17. if (MsgAlertPresent)

65
00:01:07,771 --> 00:01:07,772
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

66
00:01:07,773 --> 00:01:07,798
21. waitForPageLoad(2)

67
00:01:07,800 --> 00:01:07,801
111. Exit TestCase

68
00:01:07,803 --> 00:01:07,885
119. Appel Brique Réutilisable VerificationSiCompteExisteDeja

69
00:01:07,887 --> 00:01:10,891
5.  Exit Action ou on passe à la création

70
00:01:10,893 --> 00:01:10,894
9. StopTestCase = false

71
00:01:10,895 --> 00:01:14,215
13. MsgAlertPresent = verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Verif_PopUpCompteExisteDeja"), 2, OPTIONAL)

72
00:01:14,217 --> 00:01:14,217
17. if (MsgAlertPresent)

73
00:01:14,219 --> 00:01:14,220
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

74
00:01:14,222 --> 00:01:14,243
21. waitForPageLoad(2)

75
00:01:14,245 --> 00:01:14,245
125. Exit TestCase

76
00:01:14,247 --> 00:01:14,247
131.  Création de Email utilisateur

77
00:01:14,249 --> 00:01:16,266
135. delay(2)

78
00:01:16,268 --> 00:01:20,792
139. setText(findTestObject("Object Repository/Connexion Usager/Input_Email"), MonEmail)

79
00:01:20,795 --> 00:01:25,341
143. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmeEmail"), MonEmail)

80
00:01:25,344 --> 00:01:27,680
147. click(findTestObject("Object Repository/Connexion Usager/span_btn_ValiderEmail"))

81
00:01:27,682 --> 00:01:29,685
151. delay(2)

82
00:01:29,687 --> 00:01:32,143
155. click(findTestObject("Object Repository/Connexion Usager/btn_span_RetourAccueil"))

83
00:01:32,145 --> 00:01:34,161
159. delay(2)

84
00:01:34,164 --> 00:01:34,202
165. Get all cookies after Event NetWork in Page

85
00:01:34,204 --> 00:01:34,204
171. Navigation à URL  Qualification et Création MDP

86
00:01:34,206 --> 00:01:34,206
177. Navigation à URL Préprode  et Création MDP

87
00:01:34,208 --> 00:01:34,209
1. URL_CreationMDP = URLpwPreProd + Token

88
00:01:34,210 --> 00:01:36,298
5. navigateToUrl(URL_CreationMDP)

89
00:01:36,302 --> 00:01:36,391
183. Vérification de la conformité du nouveau MDP

90
00:01:36,393 --> 00:01:36,395
3. waiting for the number of elements in the DOM to stop changing

91
00:01:36,397 --> 00:01:36,397
7. println("Créer un mot de passe sans majuscule")

92
00:01:36,400 --> 00:01:40,885
11. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "hhizaoui001!")

93
00:01:40,888 --> 00:01:45,415
15. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "hhizaoui001!")

94
00:01:45,417 --> 00:01:47,727
19. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

95
00:01:47,729 --> 00:01:47,853
23. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

96
00:01:47,856 --> 00:01:47,856
27. println("Créer un mot de passe sans minuscule")

97
00:01:47,858 --> 00:01:52,360
31. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHIZAOUI001!")

98
00:01:52,362 --> 00:01:56,759
35. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHIZAOUI001!")

99
00:01:56,761 --> 00:01:58,957
39. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

100
00:01:58,959 --> 00:01:59,058
43. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

101
00:01:59,060 --> 00:01:59,060
47. println("Créer un mot de passe sans caractère spécial")

102
00:01:59,061 --> 00:02:03,445
51. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui0010")

103
00:02:03,446 --> 00:02:07,887
55. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui0010")

104
00:02:07,890 --> 00:02:10,121
59. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

105
00:02:10,123 --> 00:02:10,254
63. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

106
00:02:10,256 --> 00:02:10,256
67. println("Créer un mot de passe sans chiffre")

107
00:02:10,257 --> 00:02:14,673
71. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaouihiza!")

108
00:02:14,675 --> 00:02:19,059
75. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaouihiza!")

109
00:02:19,061 --> 00:02:21,250
79. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

110
00:02:21,251 --> 00:02:21,367
83. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

111
00:02:21,369 --> 00:02:21,369
87. println("Saisir 2 mots de passe différents")

112
00:02:21,370 --> 00:02:25,758
91. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui001!")

113
00:02:25,760 --> 00:02:30,165
95. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui001!def")

114
00:02:30,167 --> 00:02:32,441
99. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

115
00:02:32,443 --> 00:02:32,575
103. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_ MSG_ChampsDoiventEtreIdentiques"), 1)

116
00:02:32,577 --> 00:02:32,577
107. println("Créer un mot de passe moins de 12 caractères")

117
00:02:32,578 --> 00:02:36,970
111. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHiza001!")

118
00:02:36,972 --> 00:02:41,333
115. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHiza001!")

119
00:02:41,336 --> 00:02:43,552
119. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

120
00:02:43,554 --> 00:02:43,672
123. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

121
00:02:43,674 --> 00:02:48,005
189. Renseigner PDM Valide

122
00:02:48,008 --> 00:02:52,315
193. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), Password)

123
00:02:52,317 --> 00:02:54,547
197. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

124
00:02:54,549 --> 00:02:58,053
203. Retour à l'accueil

125
00:02:58,056 --> 00:02:58,082
207. waitForPageLoad(5)

126
00:02:58,085 --> 00:02:58,085
17. if (StopTestCase == false)

127
00:02:58,088 --> 00:02:58,167
3. Appel Brique Réutilisable pour Identification Usager ou Agent

128
00:02:58,169 --> 00:02:58,169
1. if (Profiles == "Usager")

129
00:02:58,171 --> 00:03:03,188
1. delay(5)

130
00:03:03,191 --> 00:03:05,795
7.  Cliquer sur le lien Se Connecter :

131
00:03:05,797 --> 00:03:05,867
13. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

132
00:03:05,868 --> 00:03:05,869
3. waiting for the number of elements in the DOM to stop changing

133
00:03:05,870 --> 00:03:05,870
11. RunConfiguration: getExecutionProperties Driver 

134
00:03:05,872 --> 00:03:05,872
17. contournement du message d'erreur lié à la confidentialité :

135
00:03:05,873 --> 00:03:09,210
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

136
00:03:09,213 --> 00:03:09,214
23. contournement du message d'erreur lié à la confidentialité :

137
00:03:09,216 --> 00:03:12,234
27. delay(3)

138
00:03:12,237 --> 00:03:17,245
17. delay(5)

139
00:03:17,247 --> 00:03:21,557
23. Renseigner l'Identifiant et le mot de passe :

140
00:03:21,559 --> 00:03:21,559
27. NumEtrangerVisa = NumEtrangerVisa

141
00:03:21,561 --> 00:03:25,801
31. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_MDP"), Password)

142
00:03:25,803 --> 00:03:29,474
35. click(findTestObject("Object Repository/Connexion Usager/btn_Sidentifier"))

143
00:03:29,476 --> 00:03:44,481
39. delay(15)

144
00:03:44,483 --> 00:03:44,587
45. Vérification position sur la page d'accueil

145
00:03:44,588 --> 00:03:44,589
7. Identification : Portail Agent

146
00:03:44,590 --> 00:03:44,591
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

147
00:03:44,592 --> 00:03:44,665
9. Appel Brique Réutilisable pour une Demande Ou Renouvelle Titre De Sejour Usager

148
00:03:44,666 --> 00:03:44,667
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

149
00:03:44,668 --> 00:03:47,680
5. delay(3)

150
00:03:47,682 --> 00:03:48,012
11. Choisir le branchement demandé par mes JDD réutilisables  

151
00:03:48,015 --> 00:03:51,022
15. delay(3)

152
00:03:51,024 --> 00:03:51,024
19. switch (PourQui)

153
00:03:51,025 --> 00:03:53,218
2. check(findTestObject("Object Repository/Page_Accueil_Usager/CheckBox_Moi-meme"))

154
00:03:53,220 --> 00:03:53,220
6. break

155
00:03:53,222 --> 00:03:55,459
25. Je valide Mon choix

156
00:03:55,462 --> 00:03:55,554
15. Appel Brique Réutilisable pour Remplir Le Formulaire Type De Titre De Séjour Usager

157
00:03:55,555 --> 00:03:55,556
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

158
00:03:55,558 --> 00:04:05,564
5. delay(10)

159
00:04:05,566 --> 00:04:05,566
9. switch (TypeTitreDeSejour)

160
00:04:05,567 --> 00:04:05,568
2. if (Titre == "Visiteur" || Titre == "Etudiant")

161
00:04:05,569 --> 00:04:07,789
1. check(findTestObject("Object Repository/Page_DemarcheRenouvellement/CheckBox_SolliciteTS_PasseportTalent"))

162
00:04:07,790 --> 00:04:09,999
5. check(findTestObject("Object Repository/Page_DemarcheRenouvellement/CheckBox_SolliciteTS_InvestisseurOuPorteurProjetEconomique"))

163
00:04:10,001 --> 00:04:12,214
11. Valider mon choix

164
00:04:12,216 --> 00:04:14,982
15. check(findTestObject("Object Repository/Page_DemarcheRenouvellement/CheckBox_SolliciteTS_TS-PT-CreateurDEntreprise"))

165
00:04:14,985 --> 00:04:17,292
21. 2 éme Validation de mon choix

166
00:04:17,293 --> 00:04:19,525
27. 3 éme Validation de mon choix

167
00:04:19,528 --> 00:04:19,529
6. break

168
00:04:19,531 --> 00:04:21,903
17. Verify text alert is correct or not

169
00:04:21,906 --> 00:04:21,906
21. if (MsgAlertPresent)

170
00:04:21,909 --> 00:04:21,910
2. markPassed(" C'est le bon Moment pour demander le renouvellement de votre titre.")

171
00:04:21,913 --> 00:04:22,116
21. Appel Brique Réutilisable pour Remplir Le Formulaire Informations Personnelles Usager

172
00:04:22,121 --> 00:04:22,124
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

173
00:04:22,129 --> 00:04:24,518
5. if (verifyElementPresent(findTestObject("Object Repository/Page_InformationPersonnelles_Usager/CheckBox_liensPersonnelsFamiliaux_1_Non"), 1, OPTIONAL))

174
00:04:24,521 --> 00:04:26,539
9. delay(2)

175
00:04:26,543 --> 00:04:28,990
13. if (verifyElementPresent(findTestObject("Object Repository/Page_InformationPersonnelles_Usager/CheckBox_liensPersonnelsFamiliaux_2_Non"), 1, OPTIONAL))

176
00:04:28,992 --> 00:04:30,997
17. delay(2)

177
00:04:31,000 --> 00:04:31,240
21. if (verifyElementPresent(findTestObject("Object Repository/Page_InformationPersonnelles_Usager/CheckBox_DesEnfantsACharge_Non"), 1, OPTIONAL))

178
00:04:31,244 --> 00:04:33,650
1. check(findTestObject("Object Repository/Page_InformationPersonnelles_Usager/CheckBox_DesEnfantsACharge_Non"), OPTIONAL)

179
00:04:33,652 --> 00:04:35,669
25. delay(2)

180
00:04:35,672 --> 00:04:41,587
29. setText(findTestObject("Object Repository/Page_InformationPersonnelles_Usager/Input_AdresseUsager"), AdresseUsager)

181
00:04:41,592 --> 00:04:43,605
33. delay(2)

182
00:04:43,608 --> 00:04:48,480
37. setText(findTestObject("Object Repository/Page_InformationPersonnelles_Usager/Input_NumeroDeTelephone"), NumeroTelephoneUsager)

183
00:04:48,483 --> 00:04:50,912
41. click(findTestObject("Object Repository/Page_DemarcheRenouvellement/btn_EnregistrerEtPoursuivre"))

184
00:04:50,915 --> 00:04:51,014
27. Appel Brique Réutilisable pour Remplir Le Formulaire Motif De La Demande Usager

185
00:04:51,018 --> 00:04:51,019
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

186
00:04:51,023 --> 00:04:51,023
7. Option Correspondant à votre situation :Renouvellement DeTitre Séjour  Ou Visiteur

187
00:04:51,026 --> 00:04:51,027
13. Option Correspondant à votre situation : Visiteur

188
00:04:51,029 --> 00:04:51,029
19. Option Correspondant à votre situation :Salarié Qualifié

189
00:04:51,032 --> 00:04:51,032
25. Option Correspondant à votre situation :Salarié Entreprise Innovante

190
00:04:51,034 --> 00:04:51,035
31. Option Correspondant à votre situation :Carte Bleue Européenne

191
00:04:51,038 --> 00:04:51,038
37. Option Correspondant à votre situation :Salarié En Mission

192
00:04:51,042 --> 00:04:51,042
43. Option Correspondant à votre situation :ChercheurEtChercheurEnMobilite

193
00:04:51,045 --> 00:04:51,045
49. Option Correspondant à votre situation :Investisseur (French tech Visa for Investors)

194
00:04:51,048 --> 00:04:51,048
55. Option Correspondant à votre situation :Investisseur (French tech Visa for Investors)

195
00:04:51,051 --> 00:04:53,525
3. INFORMATIONS RELATIVES À LA QUALIFICATION

196
00:04:53,529 --> 00:04:57,956
9. INFORMATIONS RELATIVES À L'EXPÉRIENCE PROFESSIONNELLE

197
00:04:57,960 --> 00:04:59,967
13. delay(2)

198
00:04:59,971 --> 00:05:02,383
17. click(findTestObject("Object Repository/Page_MotifDeLaDemande_Usager/btn_ConfirmerNombreEntreprises"))

199
00:05:02,386 --> 00:05:04,399
23. ÉLÉMENTS RELATIFS À L'ENTREPRISE CRÉÉE

200
00:05:04,402 --> 00:05:06,636
27. click(findTestObject("Object Repository/Page_MotifDeLaDemande_Usager/CheckBox_EntrepriseANumeroSiret"))

201
00:05:06,638 --> 00:05:11,286
31. setText(findTestObject("Object Repository/Page_MotifDeLaDemande_Usager/input_NumeroSiret"), "47976684200724")

202
00:05:11,289 --> 00:05:13,603
35. click(findTestObject("Object Repository/Page_MotifDeLaDemande_Usager/btn_ConfirmerNumeroSiret"))

203
00:05:13,605 --> 00:05:15,872
41. Nature des activités

204
00:05:15,874 --> 00:05:18,155
45. click(findTestObject("Object Repository/Page_MotifDeLaDemande_Usager/select_Value_NatureDesActivites"))

205
00:05:18,159 --> 00:05:20,415
51. activités sont-elles soumises à autorisation d'exercice

206
00:05:20,417 --> 00:05:25,435
57. Fonction exercée au sein de cette société

207
00:05:25,437 --> 00:05:27,749
63. Étes-vous mandaté par une société ayant son siège social à l'étranger

208
00:05:27,751 --> 00:05:32,164
71. Nombre de comptes

209
00:05:32,168 --> 00:05:34,595
75. click(findTestObject("Object Repository/Page_MotifDeLaDemande_Usager/btn_confirmerNombreDeComptes"))

210
00:05:34,598 --> 00:05:36,891
83. Nature du dépôt

211
00:05:36,893 --> 00:05:39,192
87. click(findTestObject("Object Repository/Page_MotifDeLaDemande_Usager/select_Value_NatureDuDepot"))

212
00:05:39,194 --> 00:05:43,657
93. Montant 

213
00:05:43,659 --> 00:05:48,804
99. Dénomination de l'organisme tenant le compte

214
00:05:48,806 --> 00:05:53,800
105. Adresse de l'organisme tenant le compte

215
00:05:53,802 --> 00:05:58,463
111. Numéro du compte 

216
00:05:58,465 --> 00:06:00,738
117. RESSOURCES

217
00:06:00,741 --> 00:06:03,031
121. click(findTestObject("Object Repository/Page_MotifDeLaDemande_Usager/select_Value_RESSOURCES"))

218
00:06:03,034 --> 00:06:07,456
127. Montant €/mois 

219
00:06:07,458 --> 00:06:09,739
133. Validation

220
00:06:09,741 --> 00:06:09,742
61. Option Correspondant à votre situation :Investisseur (French Tech Visa For Founders)

221
00:06:09,744 --> 00:06:09,744
67. Option Correspondant à votre situation :Investisseur (MandataireSocial)

222
00:06:09,746 --> 00:06:09,746
73. Option Correspondant à votre situation :Passeport Talent/ArtisteNonSalarie

223
00:06:09,749 --> 00:06:09,749
79. Option Correspondant à votre situation :Passeport Talent/ArtisteSalarie

224
00:06:09,751 --> 00:06:09,752
85. Option Correspondant à votre situation :Passeport Talent  (MembreDeFamillePasseportTalent_Conjoint)

225
00:06:09,753 --> 00:06:09,753
31. if (TypeTitreDeSejour == "RenouvellementDeTitreSejour" || TypeTitreDeSejour == "Visiteur" && Titre == "Etudiant" || Titre == "Visiteur")

226
00:06:09,755 --> 00:06:09,847
37. AppelBrique Réutilisable pour Remplir Le Formulaire Justificatifs Usager

227
00:06:09,849 --> 00:06:09,850
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

228
00:06:09,853 --> 00:06:09,853
7. RunConfiguration for get Execution Properties Driver

229
00:06:09,855 --> 00:06:09,855
11. DriverName = DriverName

230
00:06:09,857 --> 00:06:09,857
15. driver = getWebDriver()

231
00:06:09,859 --> 00:06:09,859
19. wrappedDriver = driver.getWrappedDriver()

232
00:06:09,861 --> 00:06:09,861
23. out.println(wrappedDriver.getClass())

233
00:06:09,863 --> 00:06:09,864
27. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

234
00:06:09,867 --> 00:06:09,867
31. SpecificDownloadDirectory = ""

235
00:06:09,869 --> 00:06:09,870
37. Upload file attachment

236
00:06:09,872 --> 00:06:09,873
3. SpecificDownloadDirectory = getProjectDir() + "/Data Files"

237
00:06:09,875 --> 00:06:09,876
7. println("SpecificDownloadDirectory : " + SpecificDownloadDirectory)

238
00:06:09,878 --> 00:06:09,878
43. Documents Justificatifs Correspondant à votre situation :Renouvellement DeTitre Séjour

239
00:06:09,881 --> 00:06:09,882
49. Documents Justificatifs Correspondant à votre situation : Visiteur

240
00:06:09,884 --> 00:06:09,885
53. println("TypeTitreDeSejour :" + TypeTitreDeSejour)

241
00:06:09,887 --> 00:06:09,888
59. 'Option Correspondant à votre situation :'Carte Bleue Européenne', 'Salarié En Mission'

242
00:06:09,891 --> 00:06:09,892
65. 'Option Correspondant à votre situation :Salarié Qualifié', 'Salarié Entreprise Innovante', 'ChercheurEtChercheurEnMobilite'

243
00:06:09,894 --> 00:06:09,895
71. 'Option Correspondant à votre situation :Salarié Qualifié', 'Salarié Entreprise Innovante', 'ChercheurEtChercheurEnMobilite'

244
00:06:09,898 --> 00:06:12,093
1. uploadFile(findTestObject("Object Repository/Page_Justificatifs_Usager/Btn_ChoisirFichier_TitreSejourValide"), SpecificDownloadDirectory + "/EtatCivil.pdf")

245
00:06:12,096 --> 00:06:17,114
5. delay(5)

246
00:06:17,117 --> 00:06:19,302
11. Joindre un  justificatif Passeport

247
00:06:19,304 --> 00:06:24,316
15. delay(5)

248
00:06:24,318 --> 00:06:29,435
21. Joindre un  justificatif Photographie d'identité récente

249
00:06:29,438 --> 00:06:31,746
25. click(findTestObject("Object Repository/Page_Justificatifs_Usager/Btn_ConfirmerNumeroEphoto"))

250
00:06:31,749 --> 00:06:36,756
29. delay(5)

251
00:06:36,758 --> 00:06:38,900
35. Joindre un  justificatif DOMICILIATION

252
00:06:38,902 --> 00:06:43,911
39. delay(5)

253
00:06:43,913 --> 00:06:50,397
45. Justificatifs d’un investissement direct en France d’au moins 300 000 €

