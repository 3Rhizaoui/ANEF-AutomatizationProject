1
00:00:00,002 --> 00:00:00,002
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:00,006 --> 00:00:00,085
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:00,087 --> 00:00:00,087
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,088 --> 00:00:00,088
9. DriverName = ""

5
00:00:00,090 --> 00:00:03,197
13. openBrowser("")

6
00:00:03,198 --> 00:00:03,199
17. driver = getWebDriver()

7
00:00:03,200 --> 00:00:03,201
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:03,202 --> 00:00:03,203
25. out.println(wrappedDriver.getClass())

9
00:00:03,205 --> 00:00:03,206
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:03,207 --> 00:00:03,207
2. DriverName = get("WebUI").get("browserType")

11
00:00:03,209 --> 00:00:03,209
6. println("DriverName :" + DriverName)

12
00:00:03,211 --> 00:00:03,211
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:03,213 --> 00:00:03,213
33. DriverName = DriverName

14
00:00:03,214 --> 00:00:06,217
37. delay(medium_wait)

15
00:00:06,219 --> 00:00:06,220
41. executedBrowser = getExecutedBrowser()

16
00:00:06,221 --> 00:00:06,221
45. if (Profiles == "Usager")

17
00:00:06,222 --> 00:00:06,222
1. switch (DriverName)

18
00:00:06,223 --> 00:00:06,223
4. Navigation à URL  Qualification et Création MDP

19
00:00:06,224 --> 00:00:06,224
10. Navigation à URL Préprode  et Création MDP

20
00:00:06,225 --> 00:00:08,713
1. navigateToUrl(URL_ANEFPreProd)

21
00:00:08,714 --> 00:00:08,736
14. maximizeWindow()

22
00:00:08,737 --> 00:00:08,738
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:08,739 --> 00:00:08,740
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:08,741 --> 00:00:08,828
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:08,830 --> 00:00:08,832
3. waiting for the number of elements in the DOM to stop changing

26
00:00:08,833 --> 00:00:08,833
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:08,834 --> 00:00:08,835
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:08,837 --> 00:00:09,017
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:09,018 --> 00:00:11,283
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:11,285 --> 00:00:13,942
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:13,944 --> 00:00:13,945
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:13,946 --> 00:00:16,960
27. delay(3)

33
00:00:16,961 --> 00:00:21,967
32. delay(5)

34
00:00:21,967 --> 00:00:22,123
38. Vérification de l'étape :

35
00:00:22,124 --> 00:00:22,125
42. break

36
00:00:22,125 --> 00:00:22,126
49. if (Profiles == "Agent")

37
00:00:22,127 --> 00:00:22,128
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:22,129 --> 00:00:22,201
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:22,202 --> 00:00:22,204
5. Call Highlight.on() automatically

40
00:00:22,205 --> 00:00:22,243
9. waitForPageLoad(5)

41
00:00:22,245 --> 00:00:25,223
15. Cliquer sur le lien Se Connecter :

42
00:00:25,225 --> 00:00:25,225
19. if (EnvExec == "URL_ANEFQualif")

43
00:00:25,227 --> 00:00:28,446
25. Première visiteq? Créez votre compte :

44
00:00:28,449 --> 00:00:28,466
29. waitForPageLoad(5)

45
00:00:28,467 --> 00:00:28,468
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

46
00:00:28,469 --> 00:00:33,268
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

47
00:00:33,271 --> 00:00:33,272
45.  Fournir La Date de début de validité :

48
00:00:33,274 --> 00:00:33,274
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

49
00:00:33,276 --> 00:00:33,277
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

50
00:00:33,279 --> 00:00:37,695
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

51
00:00:37,698 --> 00:00:40,396
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

52
00:00:40,398 --> 00:00:44,819
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

53
00:00:44,822 --> 00:00:44,823
71.  Fournir La Date de fin de validité :

54
00:00:44,824 --> 00:00:44,825
75. DateFin = tools.MyStringTools.ParsedDateFin()

55
00:00:44,827 --> 00:00:44,828
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

56
00:00:44,830 --> 00:00:49,264
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

57
00:00:49,266 --> 00:00:51,838
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

58
00:00:51,840 --> 00:00:56,237
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

59
00:00:56,239 --> 00:00:58,529
97. Validation de la page pour la création du compte :

60
00:00:58,531 --> 00:00:58,611
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

61
00:00:58,614 --> 00:01:01,630
5.  Exit Action ou on passe à la création

62
00:01:01,632 --> 00:01:01,632
9. StopTestCase = false

63
00:01:01,633 --> 00:01:08,012
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

64
00:01:08,016 --> 00:01:08,017
17. if (MsgAlertPresent)

65
00:01:08,020 --> 00:01:08,021
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

66
00:01:08,025 --> 00:01:08,060
21. waitForPageLoad(2)

67
00:01:08,062 --> 00:01:08,063
111. Exit TestCase

68
00:01:08,065 --> 00:01:08,152
119. Appel Brique Réutilisable VerificationSiCompteExisteDeja

69
00:01:08,154 --> 00:01:11,167
5.  Exit Action ou on passe à la création

70
00:01:11,170 --> 00:01:11,170
9. StopTestCase = false

71
00:01:11,172 --> 00:01:14,665
13. MsgAlertPresent = verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Verif_PopUpCompteExisteDeja"), 2, OPTIONAL)

72
00:01:14,668 --> 00:01:14,669
17. if (MsgAlertPresent)

73
00:01:14,671 --> 00:01:14,671
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

74
00:01:14,673 --> 00:01:14,700
21. waitForPageLoad(2)

75
00:01:14,702 --> 00:01:14,703
125. Exit TestCase

76
00:01:14,704 --> 00:01:14,705
131.  Création de Email utilisateur

77
00:01:14,706 --> 00:01:16,709
135. delay(2)

78
00:01:16,712 --> 00:01:21,340
139. setText(findTestObject("Object Repository/Connexion Usager/Input_Email"), MonEmail)

79
00:01:21,342 --> 00:01:25,949
143. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmeEmail"), MonEmail)

80
00:01:25,953 --> 00:01:28,408
147. click(findTestObject("Object Repository/Connexion Usager/span_btn_ValiderEmail"))

81
00:01:28,410 --> 00:01:30,425
151. delay(2)

82
00:01:30,427 --> 00:01:32,750
155. click(findTestObject("Object Repository/Connexion Usager/btn_span_RetourAccueil"))

83
00:01:32,753 --> 00:01:34,771
159. delay(2)

84
00:01:34,774 --> 00:01:34,808
165. Get all cookies after Event NetWork in Page

85
00:01:34,810 --> 00:01:34,810
171. Navigation à URL  Qualification et Création MDP

86
00:01:34,812 --> 00:01:34,812
177. Navigation à URL Préprode  et Création MDP

87
00:01:34,813 --> 00:01:34,814
1. URL_CreationMDP = URLpwPreProd + Token

88
00:01:34,816 --> 00:01:36,874
5. navigateToUrl(URL_CreationMDP)

89
00:01:36,876 --> 00:01:36,953
183. Vérification de la conformité du nouveau MDP

90
00:01:36,955 --> 00:01:36,956
3. waiting for the number of elements in the DOM to stop changing

91
00:01:36,958 --> 00:01:36,959
7. println("Créer un mot de passe sans majuscule")

92
00:01:36,961 --> 00:01:41,567
11. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "hhizaoui001!")

93
00:01:41,569 --> 00:01:46,085
15. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "hhizaoui001!")

94
00:01:46,088 --> 00:01:48,490
19. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

95
00:01:48,493 --> 00:01:48,714
23. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

96
00:01:48,717 --> 00:01:48,718
27. println("Créer un mot de passe sans minuscule")

97
00:01:48,722 --> 00:01:53,333
31. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHIZAOUI001!")

98
00:01:53,336 --> 00:01:57,854
35. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHIZAOUI001!")

99
00:01:57,856 --> 00:02:00,099
39. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

100
00:02:00,101 --> 00:02:00,218
43. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

101
00:02:00,219 --> 00:02:00,220
47. println("Créer un mot de passe sans caractère spécial")

102
00:02:00,221 --> 00:02:04,611
51. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui0010")

103
00:02:04,613 --> 00:02:09,004
55. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui0010")

104
00:02:09,006 --> 00:02:11,282
59. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

105
00:02:11,284 --> 00:02:11,419
63. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

106
00:02:11,421 --> 00:02:11,421
67. println("Créer un mot de passe sans chiffre")

107
00:02:11,423 --> 00:02:15,829
71. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaouihiza!")

108
00:02:15,831 --> 00:02:20,203
75. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaouihiza!")

109
00:02:20,205 --> 00:02:22,425
79. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

110
00:02:22,427 --> 00:02:22,548
83. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

111
00:02:22,549 --> 00:02:22,550
87. println("Saisir 2 mots de passe différents")

112
00:02:22,551 --> 00:02:26,957
91. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui001!")

113
00:02:26,960 --> 00:02:31,369
95. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui001!def")

114
00:02:31,371 --> 00:02:33,613
99. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

115
00:02:33,615 --> 00:02:33,810
103. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_ MSG_ChampsDoiventEtreIdentiques"), 1)

116
00:02:33,812 --> 00:02:33,813
107. println("Créer un mot de passe moins de 12 caractères")

117
00:02:33,815 --> 00:02:38,283
111. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHiza001!")

118
00:02:38,284 --> 00:02:42,634
115. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHiza001!")

119
00:02:42,635 --> 00:02:44,847
119. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

120
00:02:44,849 --> 00:02:44,983
123. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

121
00:02:44,986 --> 00:02:49,342
189. Renseigner PDM Valide

122
00:02:49,343 --> 00:02:53,652
193. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), Password)

123
00:02:53,653 --> 00:02:55,880
197. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

124
00:02:55,882 --> 00:02:59,341
203. Retour à l'accueil

125
00:02:59,343 --> 00:02:59,372
207. waitForPageLoad(5)

126
00:02:59,375 --> 00:02:59,375
17. if (StopTestCase == false)

127
00:02:59,378 --> 00:02:59,490
3. Appel Brique Réutilisable pour Identification Usager ou Agent

128
00:02:59,492 --> 00:02:59,493
1. if (Profiles == "Usager")

129
00:02:59,495 --> 00:03:04,501
1. delay(5)

130
00:03:04,503 --> 00:03:07,153
7.  Cliquer sur le lien Se Connecter :

131
00:03:07,156 --> 00:03:07,241
13. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

132
00:03:07,243 --> 00:03:07,243
3. waiting for the number of elements in the DOM to stop changing

133
00:03:07,245 --> 00:03:07,245
11. RunConfiguration: getExecutionProperties Driver 

134
00:03:07,247 --> 00:03:07,247
17. contournement du message d'erreur lié à la confidentialité :

135
00:03:07,248 --> 00:03:10,590
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

136
00:03:10,593 --> 00:03:10,594
23. contournement du message d'erreur lié à la confidentialité :

137
00:03:10,596 --> 00:03:13,608
27. delay(3)

138
00:03:13,612 --> 00:03:18,618
17. delay(5)

139
00:03:18,620 --> 00:03:22,958
23. Renseigner l'Identifiant et le mot de passe :

140
00:03:22,960 --> 00:03:22,961
27. NumEtrangerVisa = NumEtrangerVisa

141
00:03:22,962 --> 00:03:27,221
31. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_MDP"), Password)

142
00:03:27,223 --> 00:03:31,842
35. click(findTestObject("Object Repository/Connexion Usager/btn_Sidentifier"))

143
00:03:31,844 --> 00:03:46,851
39. delay(15)

144
00:03:46,853 --> 00:03:46,972
45. Vérification position sur la page d'accueil

145
00:03:46,974 --> 00:03:46,974
7. Identification : Portail Agent

146
00:03:46,975 --> 00:03:46,976
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

147
00:03:46,977 --> 00:03:47,057
9. Appel Brique Réutilisable pour une Demande Ou Renouvelle Titre De Sejour Usager

148
00:03:47,058 --> 00:03:47,059
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

149
00:03:47,061 --> 00:03:50,068
5. delay(3)

150
00:03:50,070 --> 00:03:50,408
11. Choisir le branchement demandé par mes JDD réutilisables  

151
00:03:50,410 --> 00:03:53,413
15. delay(3)

152
00:03:53,415 --> 00:03:53,415
19. switch (PourQui)

153
00:03:53,417 --> 00:03:55,617
2. check(findTestObject("Object Repository/Page_Accueil_Usager/CheckBox_Moi-meme"))

154
00:03:55,619 --> 00:03:55,619
6. break

155
00:03:55,621 --> 00:03:57,850
25. Je valide Mon choix

156
00:03:57,852 --> 00:03:57,928
15. Appel Brique Réutilisable pour Remplir Le Formulaire Type De Titre De Séjour Usager

157
00:03:57,929 --> 00:03:57,930
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

158
00:03:57,932 --> 00:04:07,948
5. delay(10)

159
00:04:07,950 --> 00:04:07,950
9. switch (TypeTitreDeSejour)

160
00:04:07,952 --> 00:04:07,952
2. if (Titre == "Visiteur" || Titre == "Etudiant")

161
00:04:07,953 --> 00:04:10,166
1. check(findTestObject("Object Repository/Page_DemarcheRenouvellement/CheckBox_SolliciteTS_PasseportTalent"))

162
00:04:10,168 --> 00:04:12,367
5. check(findTestObject("Object Repository/Page_DemarcheRenouvellement/CheckBox_SolliciteTS_ChercheurEtChercheurEnMobilite"))

163
00:04:12,369 --> 00:04:14,622
11. Valider mon choix

164
00:04:14,624 --> 00:04:17,145
17. 3 éme Validation de mon choix

