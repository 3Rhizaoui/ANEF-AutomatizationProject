1
00:00:02,004 --> 00:00:02,596
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:02,621 --> 00:00:10,426
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:10,428 --> 00:00:10,431
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:10,433 --> 00:00:10,434
9. DriverName = ""

5
00:00:10,436 --> 00:00:14,712
13. openBrowser("")

6
00:00:14,714 --> 00:00:14,737
17. driver = getWebDriver()

7
00:00:14,739 --> 00:00:14,781
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:14,785 --> 00:00:14,878
25. out.println(wrappedDriver.getClass())

9
00:00:14,880 --> 00:00:14,884
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:14,886 --> 00:00:14,906
2. DriverName = get("WebUI").get("browserType")

11
00:00:14,908 --> 00:00:14,913
6. println("DriverName :" + DriverName)

12
00:00:14,914 --> 00:00:14,916
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:14,917 --> 00:00:16,305
33. DriverName = DriverName

14
00:00:16,306 --> 00:00:19,340
37. delay(medium_wait)

15
00:00:19,341 --> 00:00:19,343
41. executedBrowser = getExecutedBrowser()

16
00:00:19,344 --> 00:00:19,345
45. if (Profiles == "Usager")

17
00:00:19,346 --> 00:00:19,347
1. switch (DriverName)

18
00:00:19,348 --> 00:00:19,349
4. Navigation à URL  Qualification et Création MDP

19
00:00:19,350 --> 00:00:19,351
10. Navigation à URL Préprode  et Création MDP

20
00:00:19,352 --> 00:00:35,954
1. navigateToUrl(URL_ANEFPreProd)

21
00:00:35,957 --> 00:00:36,032
14. maximizeWindow()

22
00:00:36,034 --> 00:00:36,036
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:36,037 --> 00:00:36,039
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:36,040 --> 00:00:37,217
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:37,219 --> 00:00:37,251
3. waiting for the number of elements in the DOM to stop changing

26
00:00:37,255 --> 00:00:37,257
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:37,259 --> 00:00:37,261
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:37,265 --> 00:00:37,763
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:37,765 --> 00:00:40,268
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:40,270 --> 00:00:46,747
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:46,749 --> 00:00:46,750
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:46,751 --> 00:00:49,779
27. delay(3)

33
00:00:49,781 --> 00:00:54,799
32. delay(5)

34
00:00:54,801 --> 00:00:55,002
38. Vérification de l'étape :

35
00:00:55,004 --> 00:00:55,005
42. break

36
00:00:55,006 --> 00:00:55,008
49. if (Profiles == "Agent")

37
00:00:55,010 --> 00:00:55,012
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:55,013 --> 00:00:57,152
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:57,154 --> 00:00:57,158
5. Call Highlight.on() automatically

40
00:00:57,160 --> 00:00:57,335
9. waitForPageLoad(5)

41
00:00:57,337 --> 00:01:00,635
15. Cliquer sur le lien Se Connecter :

42
00:01:00,637 --> 00:01:00,638
19. if (EnvExec == "URL_ANEFQualif")

43
00:01:00,641 --> 00:01:05,596
25. Première visiteq? Créez votre compte :

44
00:01:05,598 --> 00:01:05,624
29. waitForPageLoad(5)

45
00:01:05,626 --> 00:01:05,626
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

46
00:01:05,628 --> 00:01:10,671
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

47
00:01:10,674 --> 00:01:10,675
45.  Fournir La Date de début de validité :

48
00:01:10,676 --> 00:01:10,693
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

49
00:01:10,694 --> 00:01:10,695
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

50
00:01:10,696 --> 00:01:15,033
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

51
00:01:15,036 --> 00:01:17,590
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

52
00:01:17,592 --> 00:01:21,921
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

53
00:01:21,923 --> 00:01:21,924
71.  Fournir La Date de fin de validité :

54
00:01:21,925 --> 00:01:21,926
75. DateFin = tools.MyStringTools.ParsedDateFin()

55
00:01:21,927 --> 00:01:21,928
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

56
00:01:21,929 --> 00:01:26,234
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

57
00:01:26,237 --> 00:01:28,739
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

58
00:01:28,741 --> 00:01:33,064
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

59
00:01:33,066 --> 00:01:35,294
97. Validation de la page pour la création du compte :

60
00:01:35,295 --> 00:01:36,704
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

61
00:01:36,706 --> 00:01:39,723
5.  Exit Action ou on passe à la création

62
00:01:39,724 --> 00:01:39,725
9. StopTestCase = false

63
00:01:39,726 --> 00:01:46,081
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

64
00:01:46,083 --> 00:01:46,084
17. if (MsgAlertPresent)

65
00:01:46,086 --> 00:01:46,109
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

66
00:01:46,112 --> 00:01:46,144
21. waitForPageLoad(2)

67
00:01:46,146 --> 00:01:46,147
111. Exit TestCase

68
00:01:46,149 --> 00:01:47,799
119. Appel Brique Réutilisable VerificationSiCompteExisteDeja

69
00:01:47,801 --> 00:01:50,812
5.  Exit Action ou on passe à la création

70
00:01:50,813 --> 00:01:50,814
9. StopTestCase = false

71
00:01:50,815 --> 00:01:54,106
13. MsgAlertPresent = verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Verif_PopUpCompteExisteDeja"), 2, OPTIONAL)

72
00:01:54,108 --> 00:01:54,109
17. if (MsgAlertPresent)

73
00:01:54,110 --> 00:01:54,111
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

74
00:01:54,113 --> 00:01:54,135
21. waitForPageLoad(2)

75
00:01:54,138 --> 00:01:54,138
125. Exit TestCase

76
00:01:54,141 --> 00:01:54,141
131.  Création de Email utilisateur

77
00:01:54,144 --> 00:01:56,161
135. delay(2)

78
00:01:56,163 --> 00:02:00,597
139. setText(findTestObject("Object Repository/Connexion Usager/Input_Email"), MonEmail)

79
00:02:00,599 --> 00:02:04,982
143. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmeEmail"), MonEmail)

80
00:02:04,984 --> 00:02:07,249
147. click(findTestObject("Object Repository/Connexion Usager/span_btn_ValiderEmail"))

81
00:02:07,251 --> 00:02:09,267
151. delay(2)

82
00:02:09,268 --> 00:02:11,554
155. click(findTestObject("Object Repository/Connexion Usager/btn_span_RetourAccueil"))

83
00:02:11,557 --> 00:02:13,575
159. delay(2)

84
00:02:13,578 --> 00:02:13,694
165. Get all cookies after Event NetWork in Page

85
00:02:13,696 --> 00:02:13,697
171. Navigation à URL  Qualification et Création MDP

86
00:02:13,699 --> 00:02:13,699
177. Navigation à URL Préprode  et Création MDP

87
00:02:13,702 --> 00:02:13,703
1. URL_CreationMDP = URLpwPreProd + Token

88
00:02:13,704 --> 00:02:15,769
5. navigateToUrl(URL_CreationMDP)

89
00:02:15,771 --> 00:02:16,765
183. Vérification de la conformité du nouveau MDP

90
00:02:16,767 --> 00:02:16,771
3. waiting for the number of elements in the DOM to stop changing

91
00:02:16,774 --> 00:02:16,775
7. println("Créer un mot de passe sans majuscule")

92
00:02:16,777 --> 00:02:21,363
11. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "hhizaoui001!")

93
00:02:21,366 --> 00:02:25,814
15. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "hhizaoui001!")

94
00:02:25,816 --> 00:02:28,064
19. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

95
00:02:28,066 --> 00:02:28,223
23. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

96
00:02:28,225 --> 00:02:28,226
27. println("Créer un mot de passe sans minuscule")

97
00:02:28,228 --> 00:02:32,683
31. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHIZAOUI001!")

98
00:02:32,685 --> 00:02:37,090
35. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHIZAOUI001!")

99
00:02:37,092 --> 00:02:39,330
39. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

100
00:02:39,332 --> 00:02:39,459
43. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

101
00:02:39,462 --> 00:02:39,463
47. println("Créer un mot de passe sans caractère spécial")

102
00:02:39,464 --> 00:02:43,880
51. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui0010")

103
00:02:43,883 --> 00:02:48,255
55. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui0010")

104
00:02:48,258 --> 00:02:50,505
59. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

105
00:02:50,507 --> 00:02:50,639
63. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

106
00:02:50,641 --> 00:02:50,641
67. println("Créer un mot de passe sans chiffre")

107
00:02:50,643 --> 00:02:55,050
71. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaouihiza!")

108
00:02:55,053 --> 00:02:59,446
75. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaouihiza!")

109
00:02:59,448 --> 00:03:01,676
79. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

110
00:03:01,678 --> 00:03:01,806
83. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

111
00:03:01,808 --> 00:03:01,809
87. println("Saisir 2 mots de passe différents")

112
00:03:01,811 --> 00:03:06,203
91. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui001!")

113
00:03:06,206 --> 00:03:10,679
95. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui001!def")

114
00:03:10,682 --> 00:03:12,998
99. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

115
00:03:12,999 --> 00:03:13,143
103. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_ MSG_ChampsDoiventEtreIdentiques"), 1)

116
00:03:13,145 --> 00:03:13,145
107. println("Créer un mot de passe moins de 12 caractères")

117
00:03:13,147 --> 00:03:17,532
111. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHiza001!")

118
00:03:17,533 --> 00:03:21,912
115. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHiza001!")

119
00:03:21,915 --> 00:03:24,159
119. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

120
00:03:24,161 --> 00:03:24,290
123. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

121
00:03:24,292 --> 00:03:28,723
189. Renseigner PDM Valide

122
00:03:28,725 --> 00:03:33,082
193. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), Password)

123
00:03:33,084 --> 00:03:35,363
197. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

124
00:03:35,365 --> 00:03:39,050
203. Retour à l'accueil

125
00:03:39,053 --> 00:03:39,072
207. waitForPageLoad(5)

126
00:03:39,074 --> 00:03:39,075
17. if (StopTestCase == false)

127
00:03:39,076 --> 00:03:40,019
3. Appel Brique Réutilisable pour Identification Usager ou Agent

128
00:03:40,022 --> 00:03:40,022
1. if (Profiles == "Usager")

129
00:03:40,024 --> 00:03:45,040
1. delay(5)

130
00:03:45,042 --> 00:03:48,056
7.  Cliquer sur le lien Se Connecter :

131
00:03:48,058 --> 00:03:48,143
13. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

132
00:03:48,145 --> 00:03:48,145
3. waiting for the number of elements in the DOM to stop changing

133
00:03:48,147 --> 00:03:48,148
11. RunConfiguration: getExecutionProperties Driver 

134
00:03:48,150 --> 00:03:48,150
17. contournement du message d'erreur lié à la confidentialité :

135
00:03:48,152 --> 00:03:51,470
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

136
00:03:51,472 --> 00:03:51,473
23. contournement du message d'erreur lié à la confidentialité :

137
00:03:51,475 --> 00:03:54,489
27. delay(3)

138
00:03:54,491 --> 00:03:59,500
17. delay(5)

139
00:03:59,501 --> 00:04:03,803
23. Renseigner l'Identifiant et le mot de passe :

140
00:04:03,805 --> 00:04:03,805
27. NumEtrangerVisa = NumEtrangerVisa

141
00:04:03,807 --> 00:04:08,078
31. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_MDP"), Password)

142
00:04:08,081 --> 00:04:13,977
35. click(findTestObject("Object Repository/Connexion Usager/btn_Sidentifier"))

143
00:04:13,980 --> 00:04:28,993
39. delay(15)

144
00:04:28,996 --> 00:04:29,131
45. Vérification position sur la page d'accueil

145
00:04:29,133 --> 00:04:29,134
7. Identification : Portail Agent

146
00:04:29,136 --> 00:04:29,137
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

147
00:04:29,139 --> 00:04:29,944
9. Appel Brique Réutilisable pour une Demande Ou Renouvelle Titre De Sejour Usager

148
00:04:29,946 --> 00:04:29,948
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

149
00:04:29,951 --> 00:04:32,967
5. delay(3)

150
00:04:32,969 --> 00:04:33,355
11. Choisir le branchement demandé par mes JDD réutilisables  

151
00:04:33,357 --> 00:04:36,368
15. delay(3)

152
00:04:36,371 --> 00:04:36,371
19. switch (PourQui)

153
00:04:36,373 --> 00:04:38,612
2. check(findTestObject("Object Repository/Page_Accueil_Usager/CheckBox_Moi-meme"))

154
00:04:38,615 --> 00:04:38,616
6. break

155
00:04:38,619 --> 00:04:40,901
25. Je valide Mon choix

156
00:04:40,903 --> 00:04:42,090
15. Appel Brique Réutilisable pour Remplir Le Formulaire Type De Titre De Séjour Usager

157
00:04:42,092 --> 00:04:42,095
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

158
00:04:42,098 --> 00:04:52,104
5. delay(10)

159
00:04:52,106 --> 00:04:52,107
9. switch (TypeTitreDeSejour)

160
00:04:52,109 --> 00:04:52,109
2. if (Titre == "Visiteur" || Titre == "Etudiant")

161
00:04:52,111 --> 00:04:54,376
1. check(findTestObject("Object Repository/Page_DemarcheRenouvellement/CheckBox_SolliciteTS_PasseportTalent"))

162
00:04:54,377 --> 00:04:56,616
5. check(findTestObject("Object Repository/Page_DemarcheRenouvellement/CheckBox_SolliciteTS_Artiste"))

163
00:04:56,618 --> 00:04:58,892
11. 2 éme Validation de mon choix

164
00:04:58,894 --> 00:05:00,897
15. delay(2)

165
00:05:00,899 --> 00:05:03,138
21. 3 éme Validation de mon choix

166
00:05:03,140 --> 00:05:03,142
6. break

167
00:05:03,144 --> 00:05:05,454
17. Verify text alert is correct or not

168
00:05:05,457 --> 00:05:05,457
21. if (MsgAlertPresent)

169
00:05:05,460 --> 00:05:05,461
2. markPassed(" C'est le bon Moment pour demander le renouvellement de votre titre.")

170
00:05:05,464 --> 00:05:07,616
21. Appel Brique Réutilisable pour Remplir Le Formulaire Informations Personnelles Usager

171
00:05:07,619 --> 00:05:07,622
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

172
00:05:07,624 --> 00:05:07,773
5. if (verifyElementPresent(findTestObject("Object Repository/Page_InformationPersonnelles_Usager/CheckBox_liensPersonnelsFamiliaux_1_Non"), 1, OPTIONAL))

173
00:05:07,775 --> 00:05:10,034
1. check(findTestObject("Object Repository/Page_InformationPersonnelles_Usager/CheckBox_liensPersonnelsFamiliaux_1_Non"), OPTIONAL)

174
00:05:10,037 --> 00:05:12,046
9. delay(2)

175
00:05:12,049 --> 00:05:14,349
13. if (verifyElementPresent(findTestObject("Object Repository/Page_InformationPersonnelles_Usager/CheckBox_liensPersonnelsFamiliaux_2_Non"), 1, OPTIONAL))

176
00:05:14,352 --> 00:05:16,361
17. delay(2)

177
00:05:16,363 --> 00:05:16,480
21. if (verifyElementPresent(findTestObject("Object Repository/Page_InformationPersonnelles_Usager/CheckBox_DesEnfantsACharge_Non"), 1, OPTIONAL))

178
00:05:16,483 --> 00:05:18,696
1. check(findTestObject("Object Repository/Page_InformationPersonnelles_Usager/CheckBox_DesEnfantsACharge_Non"), OPTIONAL)

179
00:05:18,698 --> 00:05:20,716
25. delay(2)

180
00:05:20,718 --> 00:05:25,486
29. setText(findTestObject("Object Repository/Page_InformationPersonnelles_Usager/Input_AdresseUsager"), AdresseUsager)

181
00:05:25,491 --> 00:05:27,510
33. delay(2)

182
00:05:27,513 --> 00:05:31,937
37. setText(findTestObject("Object Repository/Page_InformationPersonnelles_Usager/Input_NumeroDeTelephone"), NumeroTelephoneUsager)

183
00:05:31,939 --> 00:05:34,258
41. click(findTestObject("Object Repository/Page_DemarcheRenouvellement/btn_EnregistrerEtPoursuivre"))

184
00:05:34,261 --> 00:05:35,905
27. Appel Brique Réutilisable pour Remplir Le Formulaire Motif De La Demande Usager

185
00:05:35,908 --> 00:05:35,911
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

186
00:05:35,916 --> 00:05:35,917
7. Option Correspondant à votre situation :Renouvellement DeTitre Séjour  Ou Visiteur

187
00:05:35,920 --> 00:05:35,921
13. Option Correspondant à votre situation : Visiteur

188
00:05:35,923 --> 00:05:35,924
19. Option Correspondant à votre situation :Salarié Qualifié

189
00:05:35,927 --> 00:05:35,928
25. Option Correspondant à votre situation :Salarié Entreprise Innovante

190
00:05:35,931 --> 00:05:35,932
31. Option Correspondant à votre situation :Carte Bleue Européenne

191
00:05:35,934 --> 00:05:35,935
37. Option Correspondant à votre situation :Salarié En Mission

192
00:05:35,937 --> 00:05:35,938
43. Option Correspondant à votre situation :ChercheurEtChercheurEnMobilite

193
00:05:35,940 --> 00:05:35,941
49. Option Correspondant à votre situation :Investisseur (French tech Visa for Investors)

194
00:05:35,944 --> 00:05:35,944
55. Option Correspondant à votre situation :Investisseur (French tech Visa for Investors)

195
00:05:35,947 --> 00:05:35,947
61. Option Correspondant à votre situation :Investisseur (French Tech Visa For Founders)

196
00:05:35,950 --> 00:05:35,950
67. Option Correspondant à votre situation :Investisseur (MandataireSocial)

197
00:05:35,953 --> 00:05:35,953
73. Option Correspondant à votre situation :Passeport Talent/ArtisteNonSalarie

198
00:05:35,957 --> 00:05:35,958
79. Option Correspondant à votre situation :Passeport Talent/ArtisteSalarie

199
00:05:35,964 --> 00:05:38,338
5. Artiste salarié

200
00:05:38,340 --> 00:05:42,827
11. INFORMATIONS RELATIVES À L'ACTIVITÉ PROFESSIONNELLE

201
00:05:42,830 --> 00:05:45,170
15. click(findTestObject("Object Repository/Page_MotifDeLaDemande_Usager/select_TypeDeContrat"))

202
00:05:45,173 --> 00:05:47,466
19. click(findTestObject("Object Repository/Page_MotifDeLaDemande_Usager/select_Value_TypeDeContrat"))

203
00:05:47,469 --> 00:05:51,831
23. setText(findTestObject("Object Repository/Page_MotifDeLaDemande_Usager/input_Jour_TypeDeContratCDI"), "22")

204
00:05:51,834 --> 00:05:54,123
27. click(findTestObject("Object Repository/Page_MotifDeLaDemande_Usager/select_Mois_TypeDeContratCDI"))

205
00:05:54,126 --> 00:05:56,145
31. delay(2)

206
00:05:56,147 --> 00:05:58,393
35. click(findTestObject("Object Repository/Page_MotifDeLaDemande_Usager/select_Value_Mois_TypeDeContratCDI"))

207
00:05:58,395 --> 00:06:02,727
39. setText(findTestObject("Object Repository/Page_MotifDeLaDemande_Usager/input_Annee_TypeDeContratCDI"), "2020")

208
00:06:02,729 --> 00:06:05,047
45. RESSOURCES

209
00:06:05,051 --> 00:06:07,374
49. click(findTestObject("Object Repository/Page_MotifDeLaDemande_Usager/select_Value_RESSOURCES"))

210
00:06:07,376 --> 00:06:11,781
55. Montant €/mois 

211
00:06:11,784 --> 00:06:14,060
61. Validation

212
00:06:14,064 --> 00:06:14,066
85. Option Correspondant à votre situation :Passeport Talent  (MembreDeFamillePasseportTalent_Conjoint)

213
00:06:14,069 --> 00:06:14,070
31. if (TypeTitreDeSejour == "RenouvellementDeTitreSejour" || TypeTitreDeSejour == "Visiteur" && Titre == "Etudiant" || Titre == "Visiteur")

214
00:06:14,073 --> 00:06:15,913
37. AppelBrique Réutilisable pour Remplir Le Formulaire Justificatifs Usager

215
00:06:15,916 --> 00:06:15,921
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

216
00:06:15,925 --> 00:06:15,926
7. RunConfiguration for get Execution Properties Driver

217
00:06:15,931 --> 00:06:15,931
11. DriverName = DriverName

218
00:06:15,934 --> 00:06:15,935
15. driver = getWebDriver()

219
00:06:15,942 --> 00:06:15,943
19. wrappedDriver = driver.getWrappedDriver()

220
00:06:15,947 --> 00:06:15,948
23. out.println(wrappedDriver.getClass())

221
00:06:15,952 --> 00:06:15,953
27. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

222
00:06:15,957 --> 00:06:15,958
31. SpecificDownloadDirectory = ""

223
00:06:15,963 --> 00:06:15,964
37. Upload file attachment

224
00:06:15,967 --> 00:06:15,968
3. SpecificDownloadDirectory = getProjectDir() + "/Data Files"

225
00:06:15,971 --> 00:06:15,972
7. println("SpecificDownloadDirectory : " + SpecificDownloadDirectory)

226
00:06:15,976 --> 00:06:15,977
43. Documents Justificatifs Correspondant à votre situation :Renouvellement DeTitre Séjour

227
00:06:15,982 --> 00:06:15,983
49. Documents Justificatifs Correspondant à votre situation : Visiteur

228
00:06:15,986 --> 00:06:15,987
53. println("TypeTitreDeSejour :" + TypeTitreDeSejour)

229
00:06:15,991 --> 00:06:17,805
59. 'Option Correspondant à votre situation :'Carte Bleue Européenne', 'Salarié En Mission'

