1
00:00:00,703 --> 00:00:00,988
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:01,002 --> 00:00:03,734
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:03,735 --> 00:00:03,737
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:03,738 --> 00:00:03,740
9. DriverName = ""

5
00:00:03,741 --> 00:00:07,105
13. openBrowser("")

6
00:00:07,108 --> 00:00:07,131
17. driver = getWebDriver()

7
00:00:07,133 --> 00:00:07,170
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:07,170 --> 00:00:07,232
25. out.println(wrappedDriver.getClass())

9
00:00:07,233 --> 00:00:07,234
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:07,234 --> 00:00:07,248
2. DriverName = get("WebUI").get("browserType")

11
00:00:07,251 --> 00:00:07,256
6. println("DriverName :" + DriverName)

12
00:00:07,257 --> 00:00:07,257
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:07,257 --> 00:00:08,032
33. DriverName = DriverName

14
00:00:08,033 --> 00:00:11,055
37. delay(medium_wait)

15
00:00:11,056 --> 00:00:11,056
41. executedBrowser = getExecutedBrowser()

16
00:00:11,063 --> 00:00:11,067
45. if (Profiles == "Usager")

17
00:00:11,069 --> 00:00:11,069
1. switch (DriverName)

18
00:00:11,069 --> 00:00:11,069
4. Navigation à URL  Qualification et Création MDP

19
00:00:11,072 --> 00:00:11,072
10. Navigation à URL Préprode  et Création MDP

20
00:00:11,075 --> 00:00:13,515
1. navigateToUrl(URL_ANEFPreProd)

21
00:00:13,516 --> 00:00:13,558
14. maximizeWindow()

22
00:00:13,561 --> 00:00:13,567
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:13,571 --> 00:00:13,574
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:13,577 --> 00:00:14,154
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:14,155 --> 00:00:14,166
3. waiting for the number of elements in the DOM to stop changing

26
00:00:14,167 --> 00:00:14,168
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:14,168 --> 00:00:14,168
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:14,171 --> 00:00:14,347
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:14,347 --> 00:00:16,634
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:16,635 --> 00:00:18,987
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:18,989 --> 00:00:18,990
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:18,992 --> 00:00:22,026
27. delay(3)

33
00:00:22,027 --> 00:00:27,033
32. delay(5)

34
00:00:27,035 --> 00:00:27,192
38. Vérification de l'étape :

35
00:00:27,193 --> 00:00:27,194
42. break

36
00:00:27,195 --> 00:00:27,196
49. if (Profiles == "Agent")

37
00:00:27,197 --> 00:00:27,199
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:27,200 --> 00:00:28,028
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:28,029 --> 00:00:28,033
5. Call Highlight.on() automatically

40
00:00:28,034 --> 00:00:28,128
9. waitForPageLoad(5)

41
00:00:28,129 --> 00:00:30,821
15. Cliquer sur le lien Se Connecter :

42
00:00:30,823 --> 00:00:30,824
19. if (EnvExec == "URL_ANEFQualif")

43
00:00:30,825 --> 00:00:33,943
25. Première visiteq? Créez votre compte :

44
00:00:33,944 --> 00:00:34,071
29. waitForPageLoad(5)

45
00:00:34,072 --> 00:00:34,074
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

46
00:00:34,079 --> 00:00:38,666
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

47
00:00:38,668 --> 00:00:38,668
45.  Fournir La Date de début de validité :

48
00:00:38,672 --> 00:00:38,686
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

49
00:00:38,688 --> 00:00:38,689
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

50
00:00:38,691 --> 00:00:43,029
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

51
00:00:43,032 --> 00:00:45,583
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

52
00:00:45,584 --> 00:00:49,935
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

53
00:00:49,936 --> 00:00:49,937
71.  Fournir La Date de fin de validité :

54
00:00:49,938 --> 00:00:49,940
75. DateFin = tools.MyStringTools.ParsedDateFin()

55
00:00:49,942 --> 00:00:49,943
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

56
00:00:49,945 --> 00:00:54,270
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

57
00:00:54,271 --> 00:00:56,776
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

58
00:00:56,777 --> 00:01:01,122
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

59
00:01:01,125 --> 00:01:03,379
97. Validation de la page pour la création du compte :

60
00:01:03,379 --> 00:01:04,243
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

61
00:01:04,244 --> 00:01:07,260
5.  Exit Action ou on passe à la création

62
00:01:07,260 --> 00:01:07,260
9. StopTestCase = false

63
00:01:07,265 --> 00:01:07,403
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

64
00:01:07,405 --> 00:01:07,407
17. if (MsgAlertPresent)

65
00:01:07,407 --> 00:01:07,577
1. TextAlert = getText(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

66
00:01:07,578 --> 00:01:07,604
5. tools.markWarningAndStop.markWarningAndStopTest(TextAlert)

67
00:01:07,606 --> 00:01:07,608
9. MsgStopTestCase = TextAlert

68
00:01:07,608 --> 00:01:07,613
13. return null

69
00:01:07,613 --> 00:01:07,613
111. Exit TestCase

70
00:01:07,618 --> 00:01:07,618
1. return null

71
00:01:07,618 --> 00:01:07,624
17. if (StopTestCase == false)

