1
00:00:00,002 --> 00:00:00,003
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:00,007 --> 00:00:00,106
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:00,108 --> 00:00:00,108
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,109 --> 00:00:00,110
9. DriverName = ""

5
00:00:00,111 --> 00:00:04,070
13. openBrowser("")

6
00:00:04,072 --> 00:00:04,073
17. driver = getWebDriver()

7
00:00:04,074 --> 00:00:04,074
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:04,076 --> 00:00:04,077
25. out.println(wrappedDriver.getClass())

9
00:00:04,078 --> 00:00:04,079
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:04,081 --> 00:00:04,081
2. DriverName = get("WebUI").get("browserType")

11
00:00:04,082 --> 00:00:04,083
6. println("DriverName :" + DriverName)

12
00:00:04,084 --> 00:00:04,085
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:04,087 --> 00:00:04,088
33. DriverName = DriverName

14
00:00:04,089 --> 00:00:07,108
37. delay(medium_wait)

15
00:00:07,110 --> 00:00:07,110
41. executedBrowser = getExecutedBrowser()

16
00:00:07,111 --> 00:00:07,112
45. if (Profiles == "Usager")

17
00:00:07,112 --> 00:00:07,113
1. switch (DriverName)

18
00:00:07,113 --> 00:00:07,114
4. Navigation à URL  Qualification et Création MDP

19
00:00:07,114 --> 00:00:07,114
10. Navigation à URL Préprode  et Création MDP

20
00:00:07,115 --> 00:00:09,574
1. navigateToUrl(URL_ANEFPreProd)

21
00:00:09,576 --> 00:00:09,601
14. maximizeWindow()

22
00:00:09,602 --> 00:00:09,602
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:09,604 --> 00:00:09,604
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:09,605 --> 00:00:09,684
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:09,685 --> 00:00:09,685
3. waiting for the number of elements in the DOM to stop changing

26
00:00:09,687 --> 00:00:09,687
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:09,688 --> 00:00:09,689
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:09,690 --> 00:00:09,842
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:09,844 --> 00:00:12,116
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:12,119 --> 00:00:14,963
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:14,965 --> 00:00:14,966
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:14,969 --> 00:00:17,979
27. delay(3)

33
00:00:17,980 --> 00:00:22,985
32. delay(5)

34
00:00:22,987 --> 00:00:23,111
38. Vérification de l'étape :

35
00:00:23,113 --> 00:00:23,113
42. break

36
00:00:23,115 --> 00:00:23,115
49. if (Profiles == "Agent")

37
00:00:23,117 --> 00:00:23,119
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:23,121 --> 00:00:23,204
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:23,205 --> 00:00:23,206
5. Call Highlight.on() automatically

40
00:00:23,207 --> 00:00:23,228
9. waitForPageLoad(5)

41
00:00:23,229 --> 00:00:26,194
15. Cliquer sur le lien Se Connecter :

42
00:00:26,196 --> 00:00:26,197
19. if (EnvExec == "URL_ANEFQualif")

43
00:00:26,201 --> 00:00:29,347
25. Première visiteq? Créez votre compte :

44
00:00:29,349 --> 00:00:29,360
29. waitForPageLoad(5)

45
00:00:29,361 --> 00:00:29,362
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

46
00:00:29,363 --> 00:00:34,039
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

47
00:00:34,040 --> 00:00:34,041
45.  Fournir La Date de début de validité :

48
00:00:34,042 --> 00:00:34,043
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

49
00:00:34,044 --> 00:00:34,044
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

50
00:00:34,046 --> 00:00:38,365
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

51
00:00:38,367 --> 00:00:40,868
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

52
00:00:40,870 --> 00:00:45,207
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

53
00:00:45,209 --> 00:00:45,209
71.  Fournir La Date de fin de validité :

54
00:00:45,210 --> 00:00:45,211
75. DateFin = tools.MyStringTools.ParsedDateFin()

55
00:00:45,212 --> 00:00:45,213
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

56
00:00:45,214 --> 00:00:49,522
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

57
00:00:49,523 --> 00:00:52,067
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

58
00:00:52,069 --> 00:00:56,365
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

59
00:00:56,366 --> 00:00:58,587
97. Validation de la page pour la création du compte :

60
00:00:58,588 --> 00:00:58,657
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

61
00:00:58,658 --> 00:01:01,667
5.  Exit Action ou on passe à la création

62
00:01:01,669 --> 00:01:01,669
9. StopTestCase = false

63
00:01:01,671 --> 00:01:08,019
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

64
00:01:08,021 --> 00:01:08,022
17. if (MsgAlertPresent)

65
00:01:08,023 --> 00:01:08,024
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

66
00:01:08,026 --> 00:01:08,041
21. waitForPageLoad(2)

67
00:01:08,043 --> 00:01:08,043
111. Exit TestCase

68
00:01:08,045 --> 00:01:08,124
119. Appel Brique Réutilisable VerificationSiCompteExisteDeja

69
00:01:08,125 --> 00:01:11,136
5.  Exit Action ou on passe à la création

70
00:01:11,138 --> 00:01:11,138
9. StopTestCase = false

71
00:01:11,140 --> 00:01:14,468
13. MsgAlertPresent = verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Verif_PopUpCompteExisteDeja"), 2, OPTIONAL)

72
00:01:14,470 --> 00:01:14,471
17. if (MsgAlertPresent)

73
00:01:14,472 --> 00:01:14,473
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

74
00:01:14,474 --> 00:01:14,501
21. waitForPageLoad(2)

75
00:01:14,503 --> 00:01:14,503
125. Exit TestCase

76
00:01:14,505 --> 00:01:14,505
131.  Création de Email utilisateur

77
00:01:14,507 --> 00:01:16,517
135. delay(2)

78
00:01:16,519 --> 00:01:21,085
139. setText(findTestObject("Object Repository/Connexion Usager/Input_Email"), MonEmail)

79
00:01:21,087 --> 00:01:25,687
143. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmeEmail"), MonEmail)

80
00:01:25,689 --> 00:01:28,027
147. click(findTestObject("Object Repository/Connexion Usager/span_btn_ValiderEmail"))

81
00:01:28,029 --> 00:01:30,040
151. delay(2)

82
00:01:30,043 --> 00:01:32,409
155. click(findTestObject("Object Repository/Connexion Usager/btn_span_RetourAccueil"))

83
00:01:32,413 --> 00:01:34,423
159. delay(2)

84
00:01:34,426 --> 00:01:34,462
165. Get all cookies after Event NetWork in Page

85
00:01:34,464 --> 00:01:34,464
171. Navigation à URL  Qualification et Création MDP

86
00:01:34,465 --> 00:01:34,466
177. Navigation à URL Préprode  et Création MDP

87
00:01:34,467 --> 00:01:34,467
1. URL_CreationMDP = URLpwPreProd + Token

88
00:01:34,469 --> 00:01:36,542
5. navigateToUrl(URL_CreationMDP)

89
00:01:36,545 --> 00:01:36,654
183. Vérification de la conformité du nouveau MDP

90
00:01:36,657 --> 00:01:36,660
3. waiting for the number of elements in the DOM to stop changing

91
00:01:36,663 --> 00:01:36,663
7. println("Créer un mot de passe sans majuscule")

92
00:01:36,665 --> 00:01:41,245
11. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "hhizaoui001!")

93
00:01:41,247 --> 00:01:45,735
15. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "hhizaoui001!")

94
00:01:45,737 --> 00:01:48,123
19. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

95
00:01:48,127 --> 00:01:48,336
23. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

96
00:01:48,339 --> 00:01:48,340
27. println("Créer un mot de passe sans minuscule")

97
00:01:48,342 --> 00:01:52,842
31. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHIZAOUI001!")

98
00:01:52,843 --> 00:01:57,266
35. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHIZAOUI001!")

99
00:01:57,267 --> 00:01:59,496
39. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

100
00:01:59,498 --> 00:01:59,639
43. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

101
00:01:59,641 --> 00:01:59,641
47. println("Créer un mot de passe sans caractère spécial")

102
00:01:59,643 --> 00:02:04,073
51. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui0010")

103
00:02:04,074 --> 00:02:08,515
55. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui0010")

104
00:02:08,517 --> 00:02:10,805
59. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

105
00:02:10,808 --> 00:02:10,937
63. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

106
00:02:10,938 --> 00:02:10,939
67. println("Créer un mot de passe sans chiffre")

107
00:02:10,940 --> 00:02:15,375
71. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaouihiza!")

108
00:02:15,377 --> 00:02:19,803
75. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaouihiza!")

109
00:02:19,805 --> 00:02:22,035
79. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

110
00:02:22,036 --> 00:02:22,155
83. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

111
00:02:22,157 --> 00:02:22,157
87. println("Saisir 2 mots de passe différents")

112
00:02:22,159 --> 00:02:26,555
91. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui001!")

113
00:02:26,556 --> 00:02:30,962
95. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui001!def")

114
00:02:30,964 --> 00:02:33,200
99. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

115
00:02:33,202 --> 00:02:33,326
103. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_ MSG_ChampsDoiventEtreIdentiques"), 1)

116
00:02:33,328 --> 00:02:33,329
107. println("Créer un mot de passe moins de 12 caractères")

117
00:02:33,330 --> 00:02:37,725
111. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHiza001!")

118
00:02:37,727 --> 00:02:42,118
115. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHiza001!")

119
00:02:42,120 --> 00:02:44,357
119. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

120
00:02:44,359 --> 00:02:44,476
123. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

121
00:02:44,477 --> 00:02:48,840
189. Renseigner PDM Valide

122
00:02:48,842 --> 00:02:53,175
193. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), Password)

123
00:02:53,176 --> 00:02:55,426
197. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

124
00:02:55,427 --> 00:02:58,896
203. Retour à l'accueil

125
00:02:58,900 --> 00:02:58,932
207. waitForPageLoad(5)

126
00:02:58,934 --> 00:02:58,935
17. if (StopTestCase == false)

127
00:02:58,937 --> 00:02:59,016
3. Appel Brique Réutilisable pour Identification Usager ou Agent

128
00:02:59,018 --> 00:02:59,018
1. if (Profiles == "Usager")

129
00:02:59,020 --> 00:03:04,028
1. delay(5)

130
00:03:04,029 --> 00:03:06,649
7.  Cliquer sur le lien Se Connecter :

131
00:03:06,651 --> 00:03:06,725
13. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

132
00:03:06,727 --> 00:03:06,727
3. waiting for the number of elements in the DOM to stop changing

133
00:03:06,729 --> 00:03:06,729
11. RunConfiguration: getExecutionProperties Driver 

134
00:03:06,731 --> 00:03:06,732
17. contournement du message d'erreur lié à la confidentialité :

135
00:03:06,733 --> 00:03:10,116
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

136
00:03:10,119 --> 00:03:10,119
23. contournement du message d'erreur lié à la confidentialité :

137
00:03:10,122 --> 00:03:13,135
27. delay(3)

138
00:03:13,137 --> 00:03:18,153
17. delay(5)

139
00:03:18,155 --> 00:03:22,468
23. Renseigner l'Identifiant et le mot de passe :

140
00:03:22,470 --> 00:03:22,470
27. NumEtrangerVisa = NumEtrangerVisa

141
00:03:22,472 --> 00:03:26,773
31. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_MDP"), Password)

142
00:03:26,775 --> 00:03:30,742
35. click(findTestObject("Object Repository/Connexion Usager/btn_Sidentifier"))

143
00:03:30,744 --> 00:03:45,756
39. delay(15)

144
00:03:45,759 --> 00:03:45,877
45. Vérification position sur la page d'accueil

145
00:03:45,879 --> 00:03:45,879
7. Identification : Portail Agent

146
00:03:45,881 --> 00:03:45,881
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

147
00:03:45,883 --> 00:03:45,961
9. Appel Brique Réutilisable pour une Demande Ou Renouvelle Titre De Sejour Usager

148
00:03:45,962 --> 00:03:45,964
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

149
00:03:45,965 --> 00:03:48,981
5. delay(3)

150
00:03:48,983 --> 00:03:49,318
11. Choisir le branchement demandé par mes JDD réutilisables  

151
00:03:49,320 --> 00:03:52,325
15. delay(3)

152
00:03:52,327 --> 00:03:52,327
19. switch (PourQui)

153
00:03:52,329 --> 00:03:54,530
2. check(findTestObject("Object Repository/Page_Accueil_Usager/CheckBox_Moi-meme"))

154
00:03:54,533 --> 00:03:54,534
6. break

155
00:03:54,536 --> 00:03:56,769
25. Je valide Mon choix

156
00:03:56,771 --> 00:03:56,862
15. Appel Brique Réutilisable pour Remplir Le Formulaire Type De Titre De Séjour Usager

157
00:03:56,863 --> 00:03:56,864
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

158
00:03:56,865 --> 00:04:06,878
5. delay(10)

159
00:04:06,880 --> 00:04:06,881
9. switch (TypeTitreDeSejour)

160
00:04:06,882 --> 00:04:06,883
2. if (Titre == "Visiteur")

161
00:04:06,884 --> 00:04:09,088
2. check(findTestObject("Object Repository/Page_DemarcheRenouvellement/CheckBox_SolliciteTS_Visiteur"))

162
00:04:09,090 --> 00:04:11,339
8. Valider mon choix

163
00:04:11,341 --> 00:04:14,345
12. delay(3)

164
00:04:14,347 --> 00:04:14,632
18. 2 éme Validation de mon choix

165
00:04:14,634 --> 00:04:14,634
6. break

166
00:04:14,636 --> 00:04:17,124
17. Verify text alert is correct or not

167
00:04:17,127 --> 00:04:17,127
21. if (MsgAlertPresent)

168
00:04:17,130 --> 00:04:17,132
2. markPassed(" C'est le bon Moment pour demander le renouvellement de votre titre.")

169
00:04:17,135 --> 00:04:17,408
21. Appel Brique Réutilisable pour Remplir Le Formulaire Informations Personnelles Usager

170
00:04:17,411 --> 00:04:17,414
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

171
00:04:17,417 --> 00:04:19,830
5. if (verifyElementPresent(findTestObject("Object Repository/Page_InformationPersonnelles_Usager/CheckBox_liensPersonnelsFamiliaux_1_Non"), 1, OPTIONAL))

172
00:04:19,833 --> 00:04:21,838
9. delay(2)

173
00:04:21,840 --> 00:04:24,245
13. if (verifyElementPresent(findTestObject("Object Repository/Page_InformationPersonnelles_Usager/CheckBox_liensPersonnelsFamiliaux_2_Non"), 1, OPTIONAL))

174
00:04:24,248 --> 00:04:26,263
17. delay(2)

175
00:04:26,267 --> 00:04:26,473
21. if (verifyElementPresent(findTestObject("Object Repository/Page_InformationPersonnelles_Usager/CheckBox_DesEnfantsACharge_Non"), 1, OPTIONAL))

176
00:04:26,476 --> 00:04:28,794
1. check(findTestObject("Object Repository/Page_InformationPersonnelles_Usager/CheckBox_DesEnfantsACharge_Non"), OPTIONAL)

177
00:04:28,797 --> 00:04:30,806
25. delay(2)

178
00:04:30,810 --> 00:04:35,804
29. setText(findTestObject("Object Repository/Page_InformationPersonnelles_Usager/Input_AdresseUsager"), AdresseUsager)

179
00:04:35,808 --> 00:04:37,820
33. delay(2)

180
00:04:37,823 --> 00:04:42,429
37. setText(findTestObject("Object Repository/Page_InformationPersonnelles_Usager/Input_NumeroDeTelephone"), NumeroTelephoneUsager)

181
00:04:42,433 --> 00:04:44,873
41. click(findTestObject("Object Repository/Page_DemarcheRenouvellement/btn_EnregistrerEtPoursuivre"))

182
00:04:44,876 --> 00:04:44,982
27. Appel Brique Réutilisable pour Remplir Le Formulaire Motif De La Demande Usager

183
00:04:44,985 --> 00:04:44,987
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

184
00:04:44,991 --> 00:04:44,992
7. Option Correspondant à votre situation :Renouvellement DeTitre Séjour  Ou Visiteur

185
00:04:44,996 --> 00:04:44,996
13. Option Correspondant à votre situation : Visiteur

186
00:04:45,000 --> 00:04:47,375
3. ATTESTATION SUR L’HONNEUR

187
00:04:47,377 --> 00:04:49,628
7. click(findTestObject("Object Repository/Page_MotifDeLaDemande_Usager/CheckBox_NExercerAucuneActiviteProfessionnelle"))

188
00:04:49,630 --> 00:04:51,847
11. click(findTestObject("Object Repository/Page_MotifDeLaDemande_Usager/CheckBox_AvoirConnaissanceDesSanctionsPenalesFausseAttestation"))

189
00:04:51,849 --> 00:04:54,060
17. ASSURANCE MALADIE

190
00:04:54,062 --> 00:04:56,314
23. Validation

191
00:04:56,316 --> 00:04:58,328
27. delay(2)

192
00:04:58,330 --> 00:04:58,331
19. Option Correspondant à votre situation :Salarié Qualifié

193
00:04:58,332 --> 00:04:58,332
25. Option Correspondant à votre situation :Salarié Entreprise Innovante

194
00:04:58,334 --> 00:04:58,334
31. Option Correspondant à votre situation :Carte Bleue Européenne

195
00:04:58,335 --> 00:04:58,335
37. Option Correspondant à votre situation :Salarié En Mission

196
00:04:58,336 --> 00:04:58,337
43. Option Correspondant à votre situation :ChercheurEtChercheurEnMobilite

197
00:04:58,338 --> 00:04:58,338
49. Option Correspondant à votre situation :Investisseur (French tech Visa for Investors)

198
00:04:58,339 --> 00:04:58,339
55. Option Correspondant à votre situation :Investisseur (French tech Visa for Investors)

199
00:04:58,341 --> 00:04:58,341
61. Option Correspondant à votre situation :Investisseur (French Tech Visa For Founders)

200
00:04:58,342 --> 00:04:58,342
67. Option Correspondant à votre situation :Investisseur (MandataireSocial)

201
00:04:58,344 --> 00:04:58,344
73. Option Correspondant à votre situation :Passeport Talent/ArtisteNonSalarie

202
00:04:58,345 --> 00:04:58,346
79. Option Correspondant à votre situation :Passeport Talent/ArtisteSalarie

203
00:04:58,347 --> 00:04:58,348
85. Option Correspondant à votre situation :Passeport Talent  (MembreDeFamillePasseportTalent_Conjoint)

204
00:04:58,350 --> 00:04:58,351
31. if (TypeTitreDeSejour == "RenouvellementDeTitreSejour" || TypeTitreDeSejour == "Visiteur" && Titre == "Etudiant" || Titre == "Visiteur")

205
00:04:58,352 --> 00:04:59,103
3. Appel Brique Réutilisable pour Remplir Le Formulaire Ressources Usager

206
00:04:59,105 --> 00:04:59,108
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

207
00:04:59,111 --> 00:05:01,433
5. click(findTestObject("Object Repository/Page_Ressources_Usager/span_DropDown_OrigineDesRessources"))

208
00:05:01,435 --> 00:05:03,706
9. click(findTestObject("Object Repository/Page_Ressources_Usager/List_OrigineDesRessources"))

209
00:05:03,708 --> 00:05:08,034
13. setText(findTestObject("Object Repository/Page_Ressources_Usager/Input_MontantParMois"), "1500")

210
00:05:08,036 --> 00:05:10,234
17. check(findTestObject("Object Repository/Page_Ressources_Usager/Check_HebergeTitreGratuit"))

211
00:05:10,236 --> 00:05:12,489
21. click(findTestObject("Object Repository/Page_DemarcheRenouvellement/btn_EnregistrerEtPoursuivre"))

212
00:05:12,491 --> 00:05:12,586
37. AppelBrique Réutilisable pour Remplir Le Formulaire Justificatifs Usager

213
00:05:12,587 --> 00:05:12,589
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

214
00:05:12,590 --> 00:05:12,590
7. RunConfiguration for get Execution Properties Driver

215
00:05:12,592 --> 00:05:12,592
11. DriverName = DriverName

216
00:05:12,594 --> 00:05:12,595
15. driver = getWebDriver()

217
00:05:12,597 --> 00:05:12,597
19. wrappedDriver = driver.getWrappedDriver()

218
00:05:12,599 --> 00:05:12,600
23. out.println(wrappedDriver.getClass())

219
00:05:12,601 --> 00:05:12,602
27. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

220
00:05:12,603 --> 00:05:12,604
31. SpecificDownloadDirectory = ""

221
00:05:12,605 --> 00:05:12,606
37. Upload file attachment

222
00:05:12,607 --> 00:05:12,607
3. SpecificDownloadDirectory = getProjectDir() + "/Data Files"

223
00:05:12,609 --> 00:05:12,609
7. println("SpecificDownloadDirectory : " + SpecificDownloadDirectory)

224
00:05:12,611 --> 00:05:12,611
43. Documents Justificatifs Correspondant à votre situation :Renouvellement DeTitre Séjour

225
00:05:12,613 --> 00:05:12,614
49. Documents Justificatifs Correspondant à votre situation : Visiteur

226
00:05:12,615 --> 00:05:14,808
1. uploadFile(findTestObject("Object Repository/Page_Justificatifs_Usager/Btn_ChoisirFichier_TitreSejourValide"), SpecificDownloadDirectory + "/EtatCivil.pdf")

227
00:05:14,810 --> 00:05:19,825
5. delay(5)

228
00:05:19,827 --> 00:05:22,015
11. Joindre un  justificatif Passeport

229
00:05:22,016 --> 00:05:27,030
15. delay(5)

230
00:05:27,031 --> 00:05:31,491
21. Joindre un  justificatif Photographie d'identité récente

231
00:05:31,493 --> 00:05:33,769
25. click(findTestObject("Object Repository/Page_Justificatifs_Usager/Btn_ConfirmerNumeroEphoto"))

232
00:05:33,772 --> 00:05:38,789
29. delay(5)

233
00:05:38,791 --> 00:05:40,955
35. Joindre un  justificatif DOMICILIATION

234
00:05:40,957 --> 00:05:45,960
39. delay(5)

235
00:05:45,962 --> 00:05:48,129
43. uploadFile(findTestObject("Object Repository/Page_Justificatifs_Usager/Btn_ChoisirFichier_SouscriptionAssurance"), SpecificDownloadDirectory + "/SouscriptionAssurance.pdf")

236
00:05:48,131 --> 00:05:53,143
47. delay(5)

237
00:05:53,145 --> 00:05:55,309
51. uploadFile(findTestObject("Object Repository/Page_Justificatifs_Usager/Btn_ChoisirFichier_PrisEnChargeParUnTiers"), SpecificDownloadDirectory + "/PrisEnChargeParUnTiers.pdf")

238
00:05:55,311 --> 00:06:00,317
55. delay(5)

239
00:06:00,319 --> 00:06:02,545
61. Validation

240
00:06:02,547 --> 00:06:14,028
65. waitForAngularLoad(10)

