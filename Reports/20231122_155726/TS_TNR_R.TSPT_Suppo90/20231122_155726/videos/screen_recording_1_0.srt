1
00:00:01,874 --> 00:00:02,316
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:02,339 --> 00:00:09,134
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:09,136 --> 00:00:09,140
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:09,142 --> 00:00:09,144
9. DriverName = ""

5
00:00:09,146 --> 00:00:13,309
13. openBrowser("")

6
00:00:13,310 --> 00:00:13,339
17. driver = getWebDriver()

7
00:00:13,342 --> 00:00:13,387
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:13,390 --> 00:00:13,517
25. out.println(wrappedDriver.getClass())

9
00:00:13,519 --> 00:00:13,522
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:13,525 --> 00:00:13,548
2. DriverName = get("WebUI").get("browserType")

11
00:00:13,550 --> 00:00:13,556
6. println("DriverName :" + DriverName)

12
00:00:13,557 --> 00:00:13,559
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:13,561 --> 00:00:15,050
33. DriverName = DriverName

14
00:00:15,052 --> 00:00:18,082
37. delay(medium_wait)

15
00:00:18,083 --> 00:00:18,084
41. executedBrowser = getExecutedBrowser()

16
00:00:18,086 --> 00:00:18,087
45. if (Profiles == "Usager")

17
00:00:18,088 --> 00:00:18,089
1. switch (DriverName)

18
00:00:18,090 --> 00:00:18,090
4. Navigation à URL  Qualification et Création MDP

19
00:00:18,091 --> 00:00:18,092
10. Navigation à URL Préprode  et Création MDP

20
00:00:18,093 --> 00:00:20,710
1. navigateToUrl(URL_ANEFPreProd)

21
00:00:20,712 --> 00:00:20,771
14. maximizeWindow()

22
00:00:20,772 --> 00:00:20,774
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:20,776 --> 00:00:20,777
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:20,779 --> 00:00:21,947
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:21,950 --> 00:00:21,973
3. waiting for the number of elements in the DOM to stop changing

26
00:00:21,976 --> 00:00:21,978
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:21,980 --> 00:00:21,982
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:21,984 --> 00:00:22,332
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:22,335 --> 00:00:24,714
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:24,716 --> 00:00:27,408
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:27,411 --> 00:00:27,413
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:27,417 --> 00:00:30,438
27. delay(3)

33
00:00:30,439 --> 00:00:35,460
32. delay(5)

34
00:00:35,461 --> 00:00:35,660
38. Vérification de l'étape :

35
00:00:35,662 --> 00:00:35,662
42. break

36
00:00:35,664 --> 00:00:35,666
49. if (Profiles == "Agent")

37
00:00:35,667 --> 00:00:35,669
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:35,671 --> 00:00:38,219
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:38,222 --> 00:00:38,227
5. Call Highlight.on() automatically

40
00:00:38,229 --> 00:00:38,440
9. waitForPageLoad(5)

41
00:00:38,442 --> 00:00:41,325
15. Cliquer sur le lien Se Connecter :

42
00:00:41,326 --> 00:00:41,327
19. if (EnvExec == "URL_ANEFQualif")

43
00:00:41,329 --> 00:00:44,400
25. Première visiteq? Créez votre compte :

44
00:00:44,402 --> 00:00:44,420
29. waitForPageLoad(5)

45
00:00:44,421 --> 00:00:44,422
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

46
00:00:44,424 --> 00:00:49,180
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

47
00:00:49,181 --> 00:00:49,182
45.  Fournir La Date de début de validité :

48
00:00:49,184 --> 00:00:49,203
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

49
00:00:49,205 --> 00:00:49,206
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

50
00:00:49,208 --> 00:00:53,546
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

51
00:00:53,548 --> 00:00:56,139
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

52
00:00:56,141 --> 00:01:00,469
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

53
00:01:00,471 --> 00:01:00,472
71.  Fournir La Date de fin de validité :

54
00:01:00,474 --> 00:01:00,475
75. DateFin = tools.MyStringTools.ParsedDateFin()

55
00:01:00,478 --> 00:01:00,479
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

56
00:01:00,481 --> 00:01:04,811
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

57
00:01:04,812 --> 00:01:07,326
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

58
00:01:07,328 --> 00:01:11,660
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

59
00:01:11,661 --> 00:01:13,906
97. Validation de la page pour la création du compte :

60
00:01:13,907 --> 00:01:15,449
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

61
00:01:15,451 --> 00:01:18,468
5.  Exit Action ou on passe à la création

62
00:01:18,469 --> 00:01:18,470
9. StopTestCase = false

63
00:01:18,471 --> 00:01:18,639
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

64
00:01:18,640 --> 00:01:18,641
17. if (MsgAlertPresent)

65
00:01:18,644 --> 00:01:18,860
1. TextAlert = getText(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

66
00:01:18,862 --> 00:01:18,893
5. tools.markWarningAndStop.markWarningAndStopTest(TextAlert)

67
00:01:18,896 --> 00:01:18,897
9. MsgStopTestCase = TextAlert

68
00:01:18,900 --> 00:01:18,902
13. return null

69
00:01:18,904 --> 00:01:18,905
111. Exit TestCase

70
00:01:18,906 --> 00:01:18,908
1. return null

71
00:01:18,910 --> 00:01:18,911
17. if (StopTestCase == false)

